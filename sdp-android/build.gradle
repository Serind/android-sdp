apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
    }
}


android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
    }
}

public class SDPFactory extends DefaultTask {

    @Input
    String unit = "dp"
    @Input
    double positiveMax = 600
    @Input
    double negativeMax = 600

    @TaskAction
    def create() {
        String resFolder =  project.getProjectDir().getPath() + "/src/main/res/";

        String folder1 = resFolder + "values";
        String fileName1 = folder1 + "/negative_sdps.xml";
        new File(folder1).mkdir();
        new File(fileName1).createNewFile();
        PrintWriter printWriter1 = new PrintWriter(fileName1);
        printWriter1.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
        printWriter1.println("<resources>");
        for(int i=1;i<=negativeMax;i++){
            printWriter1.printf("\t<dimen name=\"_minus%dsdp\">%d" + unit + "</dimen>\r\n",i,-i);
        }
        printWriter1.println("</resources>");
        printWriter1.close();

        for(double dimen = 300; dimen <= 800 ; dimen = dimen + 30){
            String folder = resFolder + "values-sw" + (int)dimen + "dp";
            String fileName = folder + "/positive_sdps.xml";
            new File(folder).mkdir();
            new File(fileName).createNewFile();
            PrintWriter printWriter = new PrintWriter(fileName);
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
            printWriter.println("<resources>");
            for(int i=1; i<=positiveMax; i++){
                double ratio = dimen < 600 ? i/375d : i/575d;
                double sdp = ratio*dimen;
                printWriter.printf("\t<dimen name=\"_%dsdp\">%.2f" + unit + "</dimen>\r\n",i,sdp);
            }
            printWriter.println("</resources>");
            printWriter.close();
        }
        for(double dimen = 300; dimen <= 800; dimen = dimen + 30){
            String folder = resFolder + "values-sw" + (int)dimen + "dp";
            String fileName = folder + "/negative_sdps.xml";
            new File(folder).mkdir();
            new File(fileName).createNewFile();
            PrintWriter printWriter = new PrintWriter(fileName);
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>");
            printWriter.println("<resources>");
            for(int i=1;i<=negativeMax;i++){
                double ratio = dimen < 600 ? i/375d : i/575d;
                double sdp = ratio*dimen;
                printWriter.printf("\t<dimen name=\"_minus%dsdp\">%.2f" + unit + "</dimen>\r\n",i,-sdp);
            }
            printWriter.println("</resources>");
            printWriter.close();
        }
    }
}

task createSDP(type: SDPFactory) {
}

//uncomment next line to edit values
//preBuild.dependsOn createSDP

createSDP{
    unit = "dp"//change to "sp" if needed
    positiveMax = 600//change to 600 or any other value if needed
    negativeMax = 600//change to 600 or any other value if needed
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

repositories {
    maven {
        url 'https://maven.google.com/'
        name 'Google'
    }
}
